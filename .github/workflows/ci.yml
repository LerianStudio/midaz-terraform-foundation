name: Terraform CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v3

    - name: Verify Conventional Commits
      uses: wagoid/commitlint-github-action@v5

    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    - name: Terraform Init
      run: |
        cd examples/gcp/vpc && terraform init -backend=false
        cd ../cloud-dns && terraform init -backend=false
        cd ../cloud-sql && terraform init -backend=false
        cd ../memorystore && terraform init -backend=false
        cd ../gke && terraform init -backend=false
        cd ../../../examples/azure/network && terraform init -backend=false
        cd ../dns && terraform init -backend=false
        cd ../database && terraform init -backend=false
        cd ../redis && terraform init -backend=false
        cd ../aks && terraform init -backend=false

    - name: Terraform Validate
      run: |
        cd examples/gcp/vpc && terraform validate
        cd ../cloud-dns && terraform validate
        cd ../cloud-sql && terraform validate
        cd ../memorystore && terraform validate
        cd ../gke && terraform validate
        cd ../../../examples/azure/network && terraform validate
        cd ../dns && terraform validate
        cd ../database && terraform validate
        cd ../redis && terraform validate
        cd ../aks && terraform validate

    - name: Run TFLint
      run: |
        tflint --init
        find . -type f -name "*.tf" -exec dirname {} \; | sort -u | while read dir; do
          echo "Linting $dir"
          (cd "$dir" && tflint)
        done

    - name: Run tfsec
      uses: aquasecurity/tfsec-action@v1.0.0

  release:
    needs: validate
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        npm install -g semantic-release @semantic-release/changelog @semantic-release/git conventional-changelog-conventionalcommits

    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release
